# Список пишется в квадратных скобках
test = [1, 2, 3, 4, 5]

# Выводит на экран указанный в квадратных скобках элемент из списка,
# список начинается с нуля.
print(test[2])

# Список в списке
test2 = [1, 2, 3, [4, 5, 6]]

# Выводит на экран указанный в квадратных скобках элемент из списка,
# список начинается с нуля.
print(test2 [3])

# Выводит на экран указанный в квадратных скобках элемент из списка,
# список начинается с нуля.
print(test2 [3])

# Умножает списов на два, результат: [1, 2, 3, 4, 5, 1, 2, 3, 4, 5]
print(test * 2)

# Прибавляет список к списку, результат: [1, 2, 3, 4, 5, 6, 7, 8, 9]
print(test + [6, 7, 8, 9])

# Используем обычное слово как список
test3 = ('Привет')

# Можно вывести определенную букву в слове используя его как список
# Результат будет: в
print (test3[3])

test4 = ['Марат', 'Леха', 'Артем']

print(test4)

# Проверка наличия определенного значения в списке,
# Результат: Имя Марат, есть в списке
if 'Марат' in test4:
    print('Имя Марат, есть в списке')

# Результат: Имя Вова, нет в списке
if 'Вова' not in test4:
    print('Имя Вова, нет в списке')

# Все также работает с исползьванием вывода элемента из списка
if test4[1] in test4:
    print('Имя ' + test4[2] + ' есть в списке')

# Использования метода .append к обьекту test5
test5 = []

# Метод .append добавляет элемент в наш список (всегда в конец)
test5.append('Привет')
test5.append(3)
test5.append([1,2,3])

# Результат будет: ['Привет', 3, [1, 2, 3]]
print(test5)

# Использование функции len
test6 = [1,3,5,76,87,8,9,76,5,4]

# Добавим еще один элемент в список
test6.append(5)

# Функция len считает сколько у нас элеменнтов в списке/массиве
# Результат будет: В массиве test6 у нас находится 11 эелементов
print('В массиве test6 у нас находится ' + str(len(test6)) + ' эелементов')

# Удалим один элемент из списка с помощью метода .remove
test6.remove(5)

# Результат будет: В массиве test6 у нас находится 10 эелементов
print('В массиве test6 у нас находится ' + str(len(test6)) + ' эелементов')

# Метод .insert с его помощью можем указать на какую позицию в списке нужно добавить элемент
test7 = [1,2,3]
test7.insert(0,4)

# Результат будет: [4, 1, 2, 3]
print(test7)

# Функция max, выводит на экран максимальное значение из списка
print(max(test7))

# Функция min, выводит на экран минимальное значение из списка
print(min(test7))

# Метод .count показывает сколько раз в списке встречается данный обьект
test8 = [1,4,6,4,8,7,4,2,2,5,6,7,8,9,6,1,2,3,4,5,6,7,8,9]

# Результат будет: 4 (четыре раза объект 6 встречается в списке)
print(test8.count (6))

# Метод .reverse переворачивает значения в массиве/списке в обратной последовательности
# Метод .reverse не возвращает перевернутую копию списка, а фактически переворачивает список
# Его нельзя использовать вместе с print
test8.reverse()

# Результат будет: [9, 8, 7, 6, 5, 4, 3, 2, 1, 6, 9, 8, 7, 6, 5, 2, 2, 4, 7, 8, 4, 6, 4, 1]
print(test8)