a, b, c = 1, 2, 3
print(a, b, c)

a, b, c = [4, 5, 6]
print(a, b, c)

a, b, c = [True, 5, 'Hello']
print(a, b, c)

# В этом случае у нас первое значение подставиться в переменную a, последнее значение
# подставиться в переменную c, а все остальные значения подставятся в переменную b в виде списка
a, *b, c = 'First', 5, 'Hello', 45, 12, 23, 'hi', 15, 3
print(a, b, c)

# В этом случае у нас первое значение подставиться в переменную a, второе значение
# подставиться в переменную b, а все остальные значения подставятся в переменную с в виде списка
a, b, *c = 'First', 5, 'Hello', 45, 12, 23, 'hi', 15, 3
print(a, b, c)

# В этом случае у нас предпоследнее значение подставиться в переменную b, последнее значение
# подставиться в переменную с, а все остальные значения подставятся в переменную a в виде списка
*a, b, c = 'First', 5, 'Hello', 45, 12, 23, 'hi', 15, 3
print(a, b, c)

# В этом случае у нас предпоследнее значение подставиться в переменную b, последнее значение
# подставиться в переменную с, а все остальные значения подставятся в переменную a в виде списка
*a, b, c = 'Hello world man'
print(a, b, c)

# В этом случае у нас предпоследнее значение подставиться в переменную b, последнее значение
# подставиться в переменную с, а все остальные значения подставятся в переменную a в виде списка,
# но так как у нас нет значения то будет пустой список
*a, b, c = 1, 2
print(a, b, c)

s = [4, 10]
print(list(range(1, 5)))
# print(list(range(s))) - TypeError: 'list' object cannot be interpreted as an integer
print(list(range(*s)))  # При использовани * он распакует значение s как (4,10) и в этом случае будет выведен список


def f(a, b, c, d):
    print(a, b, c, d)


f(1, 2, 3, 4)
a = ('hello', True, 1, [1, 2, 3, 4, 5])

f(*a)


def f1(*args):  # Можно передавать функции любое количество значений
    print(args)


f1(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
f1(1, 2)
f1()


def f2(*args):  # Возвращает кортеж
    s = 0
    for i in args:
        s += i
    return s


print(f2(1, 2, 3, 4, 5))
print(f2(2, 2, ))


def f3(**kwargs):  # Возвращает словарь
    for k, v in kwargs.items():
        print(k, v)


f3(a=1, b=2, c=3, name='Marat')


def f4(*args, **kwargs):
    print(args, kwargs)


f4(1, 2, 3, 4, 5, 6, a=7, b=8, c=9, d='hello')


def outPrint(*args, sep='#', end='@'):
    print(args, sep, end)


outPrint(1, 2, 3, 4, 5, sep="90")
outPrint(1, 2, end=111)
outPrint(1, 2)

a = [3, 4, 5, 6, 7]
print(a)
print(*a) # Распоковывает список
