import random

# word_list = ['Рация','Телефон','Мышка','Вентилятор','Принтер','Чайник']
word_list = ['Рация','Бутылка','Телефон','Вентилятор','Монитор','Чайник','Наушники']
tries = 6  # количество попыток
guessed = False  # сигнальная метка
guessed_letters = []  # список уже названных букв
guessed_words = []  # список уже названных слов

def get_word():  # Возвращает рандомное слово из списка слов для загадывания
    word = random.choice(word_list)
    return word.upper()

word_completion = '_' * len(get_word())  # строка, содержащая символы _ на каждую букву задуманного слова

def display_hangman(tries):
    stages = [  # финальное состояние: голова, торс, обе руки, обе ноги
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |     / \\
           -
        ''',
        # голова, торс, обе руки, одна нога
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |     / 
           -
        ''',
        # голова, торс, обе руки
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |      
           -
        ''',
        # голова, торс и одна рука
        '''
           --------
           |      |
           |      O
           |     \\|
           |      |
           |     
           -
        ''',
        # голова и торс
        '''
           --------
           |      |
           |      O
           |      |
           |      |
           |     
           -
        ''',
        # голова
        '''
           --------
           |      |
           |      O
           |    
           |      
           |     
           -
        ''',
        # начальное состояние
        '''
           --------
           |      |
           |      
           |    
           |      
           |     
           -
        '''
    ]
    return stages[tries]

word = get_word()

def play(word):
    print('Давайте играть в угадайку слов!')
    print(display_hangman(tries)) # Выводим на печать состояние нашу висилицу
    print(word_completion)

play(word)

while True:
    indexes_found = []  # Список куда попадают индексы найденных букв в загаданном слове.
    if word_completion == get_word():  # Если мы отгадали слово по буквам
        print('Ура, вы угадали слово целиком !')
        q1 = input('Хотите съиграть еще раз? д/н: ')
        if q1 == 'д':
            continue # Эта констрцкция не работает т.к. данные не сбрасываются
        else:
            break
    s = input('Введите букву или слово целиком: ').upper()  # Просим пользователя ввести букву или слово целиком.
    if s.isalpha():  # Проверяем, что бы введенная буква или слово были только буквами.
        if len(s) == 1:  # Проверяем если пользователь ввел букву.
            if s in guessed_letters:  # Проверяем есть ли введенная буква в списке, если нет то добавляем букву в список
                print('Такая буква уже есть !')
                continue  # Если буква уже есть, возвращаемся в начало цикла
            else:
                guessed_letters.append(s)  # Добавляем букву в список если она не была там ранее

            # НАДО ПРОВЕРИТЬ МОЖЕТ ЛИ if РАБОТАТЬ ПОСЛЕ else

            if s in get_word():  # Если введенная буква есть в загаданном слове, тогда мы должны вывести, _ с отгаданной буквой в слове
                count = 0  # Задаем значение для индекса отгаданных букв
                for i in get_word():  # Проходим циклом по загаданному слову
                    if s == i:  # Если введенная буква равна букве из загаданного слова
                        indexes_found.append(count)  # Добавляем индекс если введенная буква есть в загаданном слове
                    count += 1  # Увеличиваем счетчик и проходим по циклу еще раз, тем самым находя все индексы соответствующие найденым буквам
                print(indexes_found)  # Выводим список на экран для проверки
                for i in indexes_found:  # Проходим по списку с индексами введенных букв и которые есть в загаданном слове
                    word_completion = word_completion[:i] + get_word()[i] + word_completion[i + 1:]  # Меняем по индексу отгаданные буквы в скрытом слове
                print(word_completion)  # Выводим скрытое слово с отгаданными буквами
            if s not in get_word():
                tries -= 1

        if len(s) > 1:
            if s in guessed_words:  # Проверяем есть ли введенное слово в списке слов, если нет то добавляем его туда
                print('Такое слово уже есть !')
                continue
            else:
                guessed_words.append(s)  # Добавляем слово в список, если его не было там раньше.
            if s != get_word():
                tries -= 1
        if s == get_word().upper():  # Если введенное слово равно загаданному слову.
            print('Ура, вы угадали слово целиком !')
            print(get_word())  # Печатаем загаданное слово, т.к. мы его отгадали.
            break
    else:
        print('Недопустимые символы.')
        continue
    print(display_hangman(tries))
    if tries == 0:
        print('Вы проиграли !')
        print(f'Загаданное слово {get_word()}')
        q1 = input('Хотите съиграть еще раз? д/н: ')
        if q1 == 'д':
            continue
        else:
            break

print(guessed_letters)
print(guessed_words)
print(get_word().upper())

# Попробовать преобразовать слово в список и потом производить с ним все манипуляции
