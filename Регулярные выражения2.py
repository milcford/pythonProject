import re

s = '01-234k1jbnkljnsdf;klg;lKJN:JKLN:LJKn;f   jlasdnfgl;jn+98348975293'

result1 = re.search(r'k.g', s) # r сырая строка которая отключает экранированние в строке,
# ищем сочетание символов k точка - заменяет любой симвом, кроме символа новой строки
print(result1, ' - выводит найденный элемент с указанием индекса в строке')

result2 = re.search(r'\d', s) # r сырая строка которая отключает экранированние в строке,
# ищем цифры
print(result2, ' - выводит первую найденную цифру')

result3 = re.search(r'\d\d\d', s) # r сырая строка которая отключает экранированние в строке,
# ищем цифры
print(result3, ' - выводит первуе найденные 3 цифру в строке которые идут подряд')

result4 = re.search(r'\D', s) # r сырая строка которая отключает экранированние в строке,
# ищем символы кроме цифры
print(result4, ' - выводит первый найденный символ, кроме цифры')

result5 = re.search(r'\s', s) # r сырая строка которая отключает экранированние в строке,
# ищем первый пробел
print(result5, ' - выводит первый найденный пробел')

result6 = re.search(r'\S', s) # r сырая строка которая отключает экранированние в строке,
# ищем первый символ кроме пробела
print(result6, ' - выводит первый найденный символ, кроме пробела')

result7 = re.search(r'\w', s) # r сырая строка которая отключает экранированние в строке,
# ищем первую букву или цифру или нижнее подчеркивание
print(result7, ' - выводит первую найденную букву или цифру или нижнее подчеркивание')

result8 = re.search(r'\W', s) # r сырая строка которая отключает экранированние в строке,
# ищем первый элемент являющейся не буквой, не цифрой и не нижним подчеркиванием
print(result8, ' - выводит первую найденный элемент отличный от буквы, цифры или нижнего подчеркивания')

result9 = re.search(r'\bjla', s) # r сырая строка которая отключает экранированние в строке,
# ищем начало слова по указанным элементам
print(result9, ' - выводит найденные элементы')

result10 = re.search(r'\Bjla', s) # r сырая строка которая отключает экранированние в строке,
# ищем элементы в середине слова'
print(result10, ' - так как данные элементы не находятся в середине слова')

result11 = re.search(r'\d*', s) # r сырая строка которая отключает экранированние в строке,
# ищем после цифры, ноль или более входжения каких-то символов после нашей первой найденной цифры
print(result11, ' - выводит первую найденную цифру, а за ней ноль или более входжения каких-то символов')

result12 = re.search(r'\d+', s) # r сырая строка которая отключает экранированние в строке,
# ищем после цифры, одно или более вхождений каких-то символов после нашей первой найденной цифры
print(result12, ' - выводит первую найденную цифру, а за ней одно или более вхождений каких-то символов')

result13 = re.search(r'[asdfweg]', s) # r сырая строка которая отключает экранированние в строке,
# ищет одну из букв указанных в квадратных скобках
print(result13, ' - выводит первую найденную букву, из указанных для поиска')

result14 = re.search(r'[5-8]', s) # r сырая строка которая отключает экранированние в строке,
# ищет одну из цифр указанных в диапозоне
print(result14, ' - выводит первую найденную цифру, из указанного диапазона')

result15 = re.search(r'[^5-8]', s) # r сырая строка которая отключает экранированние в строке,
# ищет одну из цифр не входящую в диапозон
print(result15, ' - выводит первую найденную цифру, не входящую в диапозон')

result16 = re.search(r'H|f', s) # r сырая строка которая отключает экранированние в строке,
# ищет указанные буквы, какая будет первой та и будет выведена
print(result16, ' - выводит первую найденную букву')

result17 = re.search(r'\d{3}', s) # r сырая строка которая отключает экранированние в строке,
# ищем цифры в количестве 3 с ипользование квантификаторами
print(result17, ' - выводит первые найденные цифры')

result18 = re.search(r'\d{1,3}', s) # r сырая строка которая отключает экранированние в строке,
# ищем цифры от одного до 3 ипользование квантификаторами
print(result18, ' - выводит первые найденные цифры')

result19 = re.search(r'\d{4,}', s) # r сырая строка которая отключает экранированние в строке,
# ищем не менее 4 подряд идущих чисел
print(result19, ' - выводит первые найденные цифры')

result20 = re.search(r'\d{,4}', s) # r сырая строка которая отключает экранированние в строке,
# ищем не более 4 подряд идущих чисел
print(result20, ' - выводит первые найденные цифры')

s2 = 'Привет! Как дела? А у меня нормально'

result1 = re.findall(r'[бвгджзклмнпрстфхцчщшБВГДЖЗКЛМНПРСТФХЦЧЩШ]\w+',s2) # r сырая строка которая отключает экранированние в строке,
# слово начинающееся с согласной буквы \w+ означает что если после буквы из списка стоит какой-то элемент отличный от пробела
# тогда он выведет найденное слово
print(result1, ' - выводит найденные слова')


